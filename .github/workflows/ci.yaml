name: frequenz-sdk-python

on: [pull_request, push, workflow_dispatch]

jobs:
  test:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        python:
          - "3.8"
          - "3.9"
          - "3.10"
    runs-on: ${{ matrix.os }}

    steps:
      - name: Fetch sources
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('minimum-requirements-ci.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Install required Python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox wheel

      - name: run nox
        run: nox -e ci_checks_max pytest_min
        timeout-minutes: 10

  build-wheels:
    runs-on: ubuntu-20.04
    needs: test

    steps:
    - name: Fetch sources
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('minimum-requirements-ci.txt', 'pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-

    - name: Install required Python packages
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel

    - name: make wheel
      run: python -m pip wheel --no-deps -w dist .

    - name: upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: frequenz-sdk-python-wheels
        path: dist/*.whl
